{"version":3,"sources":["webpack:///webpack/bootstrap 35d6386a164a9afae39c","webpack:///./src/app.js","webpack:///./~/suncalc/suncalc.js"],"names":["SunCalc","require","isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","console","log","catch","e","error","radius","canvas","document","getElementById","now","Date","drawOutline","drawTimeLine","geolocation","getCurrentPosition","gotLocation","noLocation","timeout","enableHighAccuracy","latitude","coords","longitude","localStorage","setItem","drawSunLines","getItem","alert","ctx","getContext","beginPath","center","getCenter","arc","x","y","Math","PI","stroke","time","drawLineForTime","date","sunTimes","getTimes","sunrise","sunset","drawSweep","lineWidth","drawLineForFraction","fractionOfDay","fraction","moveTo","endPoint","pointOnOutline","lineTo","width","height","startTime","endTime","fillStyle","angleForTime","fill","angleForFraction","minutesInDay","timeInMinutes","getHours","getMinutes","angle","unadjustedCenterPoint","polarToCartesian","cos","sin"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA,KAAIA,UAAU,mBAAAC,CAAQ,CAAR,CAAd;;AAEA,KAAIC,cAAcC,QAAQC,OAAOC,QAAP,CAAgBC,QAAhB,KAA6B,WAA7B;AACxB;AACAF,QAAOC,QAAP,CAAgBC,QAAhB,KAA6B,OAFL;AAGxB;AACAF,QAAOC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CACE,wDADF,CAJgB,CAAlB;;AAUA,KAAI,mBAAmBC,SAAnB,KACCJ,OAAOC,QAAP,CAAgBI,QAAhB,KAA6B,QAA7B,IAAyCP,WAD1C,CAAJ,EAC4D;AAC1DM,aAAUE,aAAV,CAAwBC,QAAxB,CAAiC,mBAAjC,EACCC,IADD,CACM,UAASC,YAAT,EAAuB;AAC3BC,aAAQC,GAAR,CAAY,2BAAZ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,IAjCD,EAiCGC,KAjCH,CAiCS,UAASC,CAAT,EAAY;AACnBH,aAAQI,KAAR,CAAc,2CAAd,EAA2DD,CAA3D;AACD,IAnCD;AAoCD;;AAED,KAAIE,SAAS,GAAb;AACA,KAAIC,SAASC,SAASC,cAAT,CAAwB,MAAxB,CAAb;AACA,KAAIC,MAAM,IAAIC,IAAJ,EAAV;AACAC,aAAYL,MAAZ,EAAoBD,MAApB;;AAEAO,cAAaN,MAAb,EAAqBD,MAArB,EAA6BI,GAA7B;AACAf,WAAUmB,WAAV,CAAsBC,kBAAtB,CAA0CC,WAA1C,EAAuDC,UAAvD,EAAmE,EAAEC,SAAS,KAAX,EAAkBC,oBAAoB,KAAtC,EAAnE;;AAEA;AACA,UAASH,WAAT,CAAqBxB,QAArB,EAA8B;AAC5B,OAAI4B,WAAW5B,SAAS6B,MAAT,CAAgBD,QAA/B;AACA,OAAIE,YAAY9B,SAAS6B,MAAT,CAAgBC,SAAhC;AACA/B,UAAOgC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCJ,QAAxC;AACA7B,UAAOgC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCF,SAAzC;AACAG,gBAAalB,MAAb,EAAqBG,GAArB,EAA0BU,QAA1B,EAAoCE,SAApC,EAA+ChB,MAA/C;AACD;;AAED,UAASW,UAAT,CAAoBZ,KAApB,EAA0B;AACxB,OAAGkB,aAAaG,OAAb,CAAqB,UAArB,CAAH,EAAoC;AAClCzB,aAAQC,GAAR,CAAY,kCAAZ,EAAgDG,KAAhD;AACAoB,kBAAalB,MAAb,EAAqBG,GAArB,EAA0Ba,aAAaG,OAAb,CAAqB,UAArB,CAA1B,EAA4DH,aAAaG,OAAb,CAAqB,WAArB,CAA5D,EAA+FpB,MAA/F;AACD,IAHD,MAII;AACFqB,WAAM,iDAAN;AACD;AACF;;AAGD;;AAEA;AACA,UAASf,WAAT,CAAqBL,MAArB,EAA6BD,MAA7B,EAAoC;AAClC,OAAIsB,MAAMrB,OAAOsB,UAAP,CAAkB,IAAlB,CAAV;AACAD,OAAIE,SAAJ;AACA,OAAIC,SAASC,UAAUzB,MAAV,CAAb;AACAqB,OAAIK,GAAJ,CAAQF,OAAOG,CAAf,EAAkBH,OAAOI,CAAzB,EAA4B7B,MAA5B,EAAoC,CAApC,EAAuC,IAAE8B,KAAKC,EAA9C;AACAT,OAAIU,MAAJ;AACD;;AAED,UAASzB,YAAT,CAAsBN,MAAtB,EAA8BD,MAA9B,EAAsCiC,IAAtC,EAA2C;AACzCC,mBAAgBjC,MAAhB,EAAwBD,MAAxB,EAAgCiC,IAAhC,EAAsC,CAAtC;AACD;;AAED,UAASd,YAAT,CAAsBlB,MAAtB,EAA8BkC,IAA9B,EAAoCrB,QAApC,EAA8CE,SAA9C,EAAyDhB,MAAzD,EAAgE;AAC9D,OAAIoC,WAAWvD,QAAQwD,QAAR,CAAiBF,IAAjB,EAAuBrB,QAAvB,EAAiCE,SAAjC,CAAf;AACAkB,mBAAgBjC,MAAhB,EAAwBD,MAAxB,EAAgCoC,SAASE,OAAzC;AACAJ,mBAAgBjC,MAAhB,EAAwBD,MAAxB,EAAgCoC,SAASG,MAAzC;AACAC,aAAUvC,MAAV,EAAkBD,MAAlB,EAA0BoC,SAASE,OAAnC,EAA4CF,SAASG,MAArD;AACD;;AAED;;AAEA,UAASL,eAAT,CAAyBjC,MAAzB,EAAiCD,MAAjC,EAAyCiC,IAAzC,EAA6D;AAAA,OAAdQ,SAAc,yDAAF,CAAE;;AAC3DC,uBAAoBzC,MAApB,EAA4BD,MAA5B,EAAoC2C,cAAcV,IAAd,CAApC,EAAyDQ,SAAzD;AACD;;AAED,UAASC,mBAAT,CAA6BzC,MAA7B,EAAqCD,MAArC,EAA6C4C,QAA7C,EAAqE;AAAA,OAAdH,SAAc,yDAAF,CAAE;;AACnE,OAAInB,MAAMrB,OAAOsB,UAAP,CAAkB,IAAlB,CAAV;AACAD,OAAImB,SAAJ,GAAgBA,SAAhB;AACA,OAAIhB,SAASC,UAAUzB,MAAV,CAAb;AACAqB,OAAIE,SAAJ;AACAF,OAAIuB,MAAJ,CAAWpB,OAAOG,CAAlB,EAAoBH,OAAOI,CAA3B;AACA,OAAIiB,WAAWC,eAAeH,QAAf,EAAyB5C,MAAzB,EAAiCyB,MAAjC,CAAf;AACAH,OAAI0B,MAAJ,CAAWF,SAASlB,CAApB,EAAuBkB,SAASjB,CAAhC;AACAP,OAAIU,MAAJ;AACD;;AAED,UAASN,SAAT,CAAmBzB,MAAnB,EAA0B;AACxB,UAAO,EAAE2B,GAAG3B,OAAOgD,KAAP,GAAa,CAAlB,EAAqBpB,GAAG5B,OAAOiD,MAAP,GAAc,CAAtC,EAAP;AACD;;AAED,UAASV,SAAT,CAAmBvC,MAAnB,EAA2BD,MAA3B,EAAmCmD,SAAnC,EAA8CC,OAA9C,EAAsD;AACpD,OAAI9B,MAAMrB,OAAOsB,UAAP,CAAkB,IAAlB,CAAV;AACA,OAAIE,SAASC,UAAUzB,MAAV,CAAb;AACAqB,OAAIE,SAAJ;AACAF,OAAI+B,SAAJ,GAAgB,yBAAhB;AACA/B,OAAIuB,MAAJ,CAAWpB,OAAOG,CAAlB,EAAoBH,OAAOI,CAA3B;AACAP,OAAIK,GAAJ,CACEF,OAAOG,CADT,EAEEH,OAAOI,CAFT,EAGE7B,MAHF,EAIEsD,aAAaH,SAAb,CAJF,EAKEG,aAAaF,OAAb,CALF;AAOA9B,OAAIuB,MAAJ,CAAWpB,OAAOG,CAAlB,EAAoBH,OAAOI,CAA3B;AACAP,OAAIiC,IAAJ;AACD;;AAKD;AACA,UAASC,gBAAT,CAA0BZ,QAA1B,EAAmC;AACjC,UAAQd,KAAKC,EAAL,GAAQ,CAAR,GAAYa,QAAZ,GAAuBd,KAAKC,EAAL,GAAQ,CAAvC;AACD;AACD,UAASuB,YAAT,CAAsBrB,IAAtB,EAA2B;AACzB,UAAOuB,iBAAkBb,cAAcV,IAAd,CAAlB,CAAP;AACD;;AAED,UAASU,aAAT,CAAuBV,IAAvB,EAA4B;AAC1B,OAAIwB,eAAe,KAAK,EAAxB;AACA,OAAIC,gBAAiBzB,KAAK0B,QAAL,KAAkB,EAAnB,GAAyB1B,KAAK2B,UAAL,EAA7C;AACA,UAAOF,gBAAgBD,YAAvB;AACD;;AAED,UAASV,cAAT,CAAwBH,QAAxB,EAAkC5C,MAAlC,EAA0CyB,MAA1C,EAAiD;AAC/C,OAAIoC,QAAQL,iBAAiBZ,QAAjB,CAAZ;AACA,OAAIkB,wBAAwBC,iBAAiB/D,MAAjB,EAAyB6D,KAAzB,CAA5B;AACA,UAAO;AACLjC,QAAGkC,sBAAsBlC,CAAtB,GAA0BH,OAAOG,CAD/B;AAELC,QAAGiC,sBAAsBjC,CAAtB,GAA0BJ,OAAOI;AAF/B,IAAP;AAID;;AAED,UAASkC,gBAAT,CAA0B/D,MAA1B,EAAkC6D,KAAlC,EAAwC;AACtC,UAAO;AACLjC,QAAE5B,SAAO8B,KAAKkC,GAAL,CAASH,KAAT,CADJ;AAELhC,QAAE7B,SAAO8B,KAAKmC,GAAL,CAASJ,KAAT;AAFJ,IAAP;AAID,E;;;;;;AC7KD;AACA;AACA;AACA;AACA;;AAEA,eAAc;;AAEd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA,0BAAyB,6CAA6C;AACtE,0BAAyB,4CAA4C;AACrE,0BAAyB,+BAA+B;;;AAGxD;;AAEA,uBAAsB;;AAEtB,gCAA+B,wDAAwD;AACvF,gCAA+B,yDAAyD;;AAExF,iCAAgC,8DAA8D;AAC9F,iCAAgC,iEAAiE;;AAEjG,+BAA8B,8CAA8C;;;AAG5E;;AAEA,+BAA8B,0CAA0C;;AAExE;;AAEA;AACA,4BAA2B;;AAE3B;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA,8BAA6B,2CAA2C;;AAExE,oCAAmC,sCAAsC;AACzE,oCAAmC,2DAA2D;;AAE9F,gCAA+B,iEAAiE;;AAEhG;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA,oCAAmC,SAAS;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA,yBAAwB;;AAExB;AACA;AACA;;AAEA;AACA;AACA,sCAAqC;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,EAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 35d6386a164a9afae39c\n **/","'use strict';\n\nvar SunCalc = require('suncalc')\n\nvar isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\n\nif ('serviceWorker' in navigator &&\n    (window.location.protocol === 'https:' || isLocalhost)) {\n  navigator.serviceWorker.register('service-worker.js')\n  .then(function(registration) {\n    console.log('service worker registered')\n//     // updatefound is fired if service-worker.js changes.\n//     registration.onupdatefound = function() {\n//       // updatefound is also fired the very first time the SW is installed,\n//       // and there's no need to prompt for a reload at that point.\n//       // So check here to see if the page is already controlled,\n//       // i.e. whether there's an existing service worker.\n//       if (navigator.serviceWorker.controller) {\n//         // The updatefound event implies that registration.installing is set:\n//         // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n//         var installingWorker = registration.installing;\n//\n//         installingWorker.onstatechange = function() {\n//           switch (installingWorker.state) {\n//             case 'installed':\n//               // At this point, the old content will have been purged and the\n//               // fresh content will have been added to the cache.\n//               // It's the perfect time to display a \"New content is\n//               // available; please refresh.\" message in the page's interface.\n//               break;\n//\n//             case 'redundant':\n//               throw new Error('The installing ' +\n//                               'service worker became redundant.');\n//\n//             default:\n//               // Ignore\n//           }\n//         };\n//       }\n//     };\n  }).catch(function(e) {\n    console.error('Error during service worker registration:', e);\n  });\n}\n\nvar radius = 100;\nvar canvas = document.getElementById('main');\nvar now = new Date()\ndrawOutline(canvas, radius);\n\ndrawTimeLine(canvas, radius, now);\nnavigator.geolocation.getCurrentPosition( gotLocation, noLocation, { timeout: 60000, enableHighAccuracy: false } );\n\n//Location deciders\nfunction gotLocation(location){\n  var latitude = location.coords.latitude\n  var longitude = location.coords.longitude\n  window.localStorage.setItem('latitude', latitude);\n  window.localStorage.setItem('longitude', longitude);\n  drawSunLines(canvas, now, latitude, longitude, radius);\n}\n\nfunction noLocation(error){\n  if(localStorage.getItem('latitude')){\n    console.log('drawing from last known location', error);\n    drawSunLines(canvas, now, localStorage.getItem('latitude'), localStorage.getItem('longitude'), radius)\n  }\n  else{\n    alert('Cannot Find Location, enable location on device');\n  }\n}\n\n\n//canvas draw functions\n\n//interface\nfunction drawOutline(canvas, radius){\n  var ctx = canvas.getContext(\"2d\");\n  ctx.beginPath();\n  var center = getCenter(canvas);\n  ctx.arc(center.x, center.y, radius, 0, 2*Math.PI);\n  ctx.stroke();\n}\n\nfunction drawTimeLine(canvas, radius, time){\n  drawLineForTime(canvas, radius, time, 3)\n}\n\nfunction drawSunLines(canvas, date, latitude, longitude, radius){\n  var sunTimes = SunCalc.getTimes(date, latitude, longitude);\n  drawLineForTime(canvas, radius, sunTimes.sunrise)\n  drawLineForTime(canvas, radius, sunTimes.sunset)\n  drawSweep(canvas, radius, sunTimes.sunrise, sunTimes.sunset)\n}\n\n//private functions\n\nfunction drawLineForTime(canvas, radius, time, lineWidth = 1){\n  drawLineForFraction(canvas, radius, fractionOfDay(time), lineWidth );\n}\n\nfunction drawLineForFraction(canvas, radius, fraction, lineWidth = 1){\n  var ctx = canvas.getContext(\"2d\");\n  ctx.lineWidth = lineWidth;\n  var center = getCenter(canvas)\n  ctx.beginPath();\n  ctx.moveTo(center.x,center.y);\n  var endPoint = pointOnOutline(fraction, radius, center);\n  ctx.lineTo(endPoint.x, endPoint.y);\n  ctx.stroke();\n}\n\nfunction getCenter(canvas){\n  return { x: canvas.width/2, y: canvas.height/2 };\n}\n\nfunction drawSweep(canvas, radius, startTime, endTime){\n  var ctx = canvas.getContext(\"2d\");\n  var center = getCenter(canvas);\n  ctx.beginPath();\n  ctx.fillStyle = \"rgba(219, 223, 99, 0.4)\";\n  ctx.moveTo(center.x,center.y);\n  ctx.arc(\n    center.x,\n    center.y,\n    radius,\n    angleForTime(startTime),\n    angleForTime(endTime)\n  );\n  ctx.moveTo(center.x,center.y);\n  ctx.fill();\n}\n\n\n\n\n// Pure helper functions\nfunction angleForFraction(fraction){\n  return( Math.PI*2 * fraction - Math.PI/2 );\n}\nfunction angleForTime(time){\n  return angleForFraction( fractionOfDay(time) );\n}\n\nfunction fractionOfDay(time){\n  var minutesInDay = 24 * 60;\n  var timeInMinutes = (time.getHours() * 60) + time.getMinutes();\n  return(timeInMinutes / minutesInDay);\n}\n\nfunction pointOnOutline(fraction, radius, center){\n  var angle = angleForFraction(fraction);\n  var unadjustedCenterPoint = polarToCartesian(radius, angle);\n  return {\n    x: unadjustedCenterPoint.x + center.x,\n    y: unadjustedCenterPoint.y + center.y\n  }\n}\n\nfunction polarToCartesian(radius, angle){\n  return {\n    x:radius*Math.cos(angle),\n    y:radius*Math.sin(angle)\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app.js\n **/","/*\n (c) 2011-2015, Vladimir Agafonkin\n SunCalc is a JavaScript library for calculating sun/moon position and light phases.\n https://github.com/mourner/suncalc\n*/\n\n(function () { 'use strict';\n\n// shortcuts for easier to read formulas\n\nvar PI   = Math.PI,\n    sin  = Math.sin,\n    cos  = Math.cos,\n    tan  = Math.tan,\n    asin = Math.asin,\n    atan = Math.atan2,\n    acos = Math.acos,\n    rad  = PI / 180;\n\n// sun calculations are based on http://aa.quae.nl/en/reken/zonpositie.html formulas\n\n\n// date/time constants and conversions\n\nvar dayMs = 1000 * 60 * 60 * 24,\n    J1970 = 2440588,\n    J2000 = 2451545;\n\nfunction toJulian(date) { return date.valueOf() / dayMs - 0.5 + J1970; }\nfunction fromJulian(j)  { return new Date((j + 0.5 - J1970) * dayMs); }\nfunction toDays(date)   { return toJulian(date) - J2000; }\n\n\n// general calculations for position\n\nvar e = rad * 23.4397; // obliquity of the Earth\n\nfunction rightAscension(l, b) { return atan(sin(l) * cos(e) - tan(b) * sin(e), cos(l)); }\nfunction declination(l, b)    { return asin(sin(b) * cos(e) + cos(b) * sin(e) * sin(l)); }\n\nfunction azimuth(H, phi, dec)  { return atan(sin(H), cos(H) * sin(phi) - tan(dec) * cos(phi)); }\nfunction altitude(H, phi, dec) { return asin(sin(phi) * sin(dec) + cos(phi) * cos(dec) * cos(H)); }\n\nfunction siderealTime(d, lw) { return rad * (280.16 + 360.9856235 * d) - lw; }\n\n\n// general sun calculations\n\nfunction solarMeanAnomaly(d) { return rad * (357.5291 + 0.98560028 * d); }\n\nfunction eclipticLongitude(M) {\n\n    var C = rad * (1.9148 * sin(M) + 0.02 * sin(2 * M) + 0.0003 * sin(3 * M)), // equation of center\n        P = rad * 102.9372; // perihelion of the Earth\n\n    return M + C + P + PI;\n}\n\nfunction sunCoords(d) {\n\n    var M = solarMeanAnomaly(d),\n        L = eclipticLongitude(M);\n\n    return {\n        dec: declination(L, 0),\n        ra: rightAscension(L, 0)\n    };\n}\n\n\nvar SunCalc = {};\n\n\n// calculates sun position for a given date and latitude/longitude\n\nSunCalc.getPosition = function (date, lat, lng) {\n\n    var lw  = rad * -lng,\n        phi = rad * lat,\n        d   = toDays(date),\n\n        c  = sunCoords(d),\n        H  = siderealTime(d, lw) - c.ra;\n\n    return {\n        azimuth: azimuth(H, phi, c.dec),\n        altitude: altitude(H, phi, c.dec)\n    };\n};\n\n\n// sun times configuration (angle, morning name, evening name)\n\nvar times = SunCalc.times = [\n    [-0.833, 'sunrise',       'sunset'      ],\n    [  -0.3, 'sunriseEnd',    'sunsetStart' ],\n    [    -6, 'dawn',          'dusk'        ],\n    [   -12, 'nauticalDawn',  'nauticalDusk'],\n    [   -18, 'nightEnd',      'night'       ],\n    [     6, 'goldenHourEnd', 'goldenHour'  ]\n];\n\n// adds a custom time to the times config\n\nSunCalc.addTime = function (angle, riseName, setName) {\n    times.push([angle, riseName, setName]);\n};\n\n\n// calculations for sun times\n\nvar J0 = 0.0009;\n\nfunction julianCycle(d, lw) { return Math.round(d - J0 - lw / (2 * PI)); }\n\nfunction approxTransit(Ht, lw, n) { return J0 + (Ht + lw) / (2 * PI) + n; }\nfunction solarTransitJ(ds, M, L)  { return J2000 + ds + 0.0053 * sin(M) - 0.0069 * sin(2 * L); }\n\nfunction hourAngle(h, phi, d) { return acos((sin(h) - sin(phi) * sin(d)) / (cos(phi) * cos(d))); }\n\n// returns set time for the given sun altitude\nfunction getSetJ(h, lw, phi, dec, n, M, L) {\n\n    var w = hourAngle(h, phi, dec),\n        a = approxTransit(w, lw, n);\n    return solarTransitJ(a, M, L);\n}\n\n\n// calculates sun times for a given date and latitude/longitude\n\nSunCalc.getTimes = function (date, lat, lng) {\n\n    var lw = rad * -lng,\n        phi = rad * lat,\n\n        d = toDays(date),\n        n = julianCycle(d, lw),\n        ds = approxTransit(0, lw, n),\n\n        M = solarMeanAnomaly(ds),\n        L = eclipticLongitude(M),\n        dec = declination(L, 0),\n\n        Jnoon = solarTransitJ(ds, M, L),\n\n        i, len, time, Jset, Jrise;\n\n\n    var result = {\n        solarNoon: fromJulian(Jnoon),\n        nadir: fromJulian(Jnoon - 0.5)\n    };\n\n    for (i = 0, len = times.length; i < len; i += 1) {\n        time = times[i];\n\n        Jset = getSetJ(time[0] * rad, lw, phi, dec, n, M, L);\n        Jrise = Jnoon - (Jset - Jnoon);\n\n        result[time[1]] = fromJulian(Jrise);\n        result[time[2]] = fromJulian(Jset);\n    }\n\n    return result;\n};\n\n\n// moon calculations, based on http://aa.quae.nl/en/reken/hemelpositie.html formulas\n\nfunction moonCoords(d) { // geocentric ecliptic coordinates of the moon\n\n    var L = rad * (218.316 + 13.176396 * d), // ecliptic longitude\n        M = rad * (134.963 + 13.064993 * d), // mean anomaly\n        F = rad * (93.272 + 13.229350 * d),  // mean distance\n\n        l  = L + rad * 6.289 * sin(M), // longitude\n        b  = rad * 5.128 * sin(F),     // latitude\n        dt = 385001 - 20905 * cos(M);  // distance to the moon in km\n\n    return {\n        ra: rightAscension(l, b),\n        dec: declination(l, b),\n        dist: dt\n    };\n}\n\nSunCalc.getMoonPosition = function (date, lat, lng) {\n\n    var lw  = rad * -lng,\n        phi = rad * lat,\n        d   = toDays(date),\n\n        c = moonCoords(d),\n        H = siderealTime(d, lw) - c.ra,\n        h = altitude(H, phi, c.dec);\n\n    // altitude correction for refraction\n    h = h + rad * 0.017 / tan(h + rad * 10.26 / (h + rad * 5.10));\n\n    return {\n        azimuth: azimuth(H, phi, c.dec),\n        altitude: h,\n        distance: c.dist\n    };\n};\n\n\n// calculations for illumination parameters of the moon,\n// based on http://idlastro.gsfc.nasa.gov/ftp/pro/astro/mphase.pro formulas and\n// Chapter 48 of \"Astronomical Algorithms\" 2nd edition by Jean Meeus (Willmann-Bell, Richmond) 1998.\n\nSunCalc.getMoonIllumination = function (date) {\n\n    var d = toDays(date),\n        s = sunCoords(d),\n        m = moonCoords(d),\n\n        sdist = 149598000, // distance from Earth to Sun in km\n\n        phi = acos(sin(s.dec) * sin(m.dec) + cos(s.dec) * cos(m.dec) * cos(s.ra - m.ra)),\n        inc = atan(sdist * sin(phi), m.dist - sdist * cos(phi)),\n        angle = atan(cos(s.dec) * sin(s.ra - m.ra), sin(s.dec) * cos(m.dec) -\n                cos(s.dec) * sin(m.dec) * cos(s.ra - m.ra));\n\n    return {\n        fraction: (1 + cos(inc)) / 2,\n        phase: 0.5 + 0.5 * inc * (angle < 0 ? -1 : 1) / Math.PI,\n        angle: angle\n    };\n};\n\n\nfunction hoursLater(date, h) {\n    return new Date(date.valueOf() + h * dayMs / 24);\n}\n\n// calculations for moon rise/set times are based on http://www.stargazing.net/kepler/moonrise.html article\n\nSunCalc.getMoonTimes = function (date, lat, lng, inUTC) {\n    var t = new Date(date);\n    if (inUTC) t.setUTCHours(0, 0, 0, 0);\n    else t.setHours(0, 0, 0, 0);\n\n    var hc = 0.133 * rad,\n        h0 = SunCalc.getMoonPosition(t, lat, lng).altitude - hc,\n        h1, h2, rise, set, a, b, xe, ye, d, roots, x1, x2, dx;\n\n    // go in 2-hour chunks, each time seeing if a 3-point quadratic curve crosses zero (which means rise or set)\n    for (var i = 1; i <= 24; i += 2) {\n        h1 = SunCalc.getMoonPosition(hoursLater(t, i), lat, lng).altitude - hc;\n        h2 = SunCalc.getMoonPosition(hoursLater(t, i + 1), lat, lng).altitude - hc;\n\n        a = (h0 + h2) / 2 - h1;\n        b = (h2 - h0) / 2;\n        xe = -b / (2 * a);\n        ye = (a * xe + b) * xe + h1;\n        d = b * b - 4 * a * h1;\n        roots = 0;\n\n        if (d >= 0) {\n            dx = Math.sqrt(d) / (Math.abs(a) * 2);\n            x1 = xe - dx;\n            x2 = xe + dx;\n            if (Math.abs(x1) <= 1) roots++;\n            if (Math.abs(x2) <= 1) roots++;\n            if (x1 < -1) x1 = x2;\n        }\n\n        if (roots === 1) {\n            if (h0 < 0) rise = i + x1;\n            else set = i + x1;\n\n        } else if (roots === 2) {\n            rise = i + (ye < 0 ? x2 : x1);\n            set = i + (ye < 0 ? x1 : x2);\n        }\n\n        if (rise && set) break;\n\n        h0 = h2;\n    }\n\n    var result = {};\n\n    if (rise) result.rise = hoursLater(t, rise);\n    if (set) result.set = hoursLater(t, set);\n\n    if (!rise && !set) result[ye > 0 ? 'alwaysUp' : 'alwaysDown'] = true;\n\n    return result;\n};\n\n\n// export as AMD module / Node module / browser variable\nif (typeof define === 'function' && define.amd) define(SunCalc);\nelse if (typeof module !== 'undefined') module.exports = SunCalc;\nelse window.SunCalc = SunCalc;\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/suncalc/suncalc.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}